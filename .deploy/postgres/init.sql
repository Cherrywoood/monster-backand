CREATE TYPE GENDER AS ENUM ('male', 'female');
CREATE TYPE JOB AS ENUM ('scarer', 'cleaner','scare assistant','disinfector','recruiter');
 
CREATE TABLE IF NOT EXISTS ROLES (
  ID INT PRIMARY KEY,
  NAME VARCHAR(16) NOT NULL UNIQUE CHECK(NAME !='')
);

CREATE TABLE IF NOT EXISTS USERS (
  ID INT PRIMARY KEY, 
  LOGIN VARCHAR(20) NOT NULL UNIQUE,
  PASSWORD VARCHAR(255) NOT NULL,
  /* add default role */
  ROLE_ID INT REFERENCES ROLES(ID) ON DELETE SET DEFAULT ON UPDATE CASCADE NOT NULL,
  CHECK((LOGIN !='') AND (PASSWORD !=''))
);

CREATE TABLE IF NOT EXISTS MONSTER (
  ID INT PRIMARY KEY,
  NAME VARCHAR(16) NOT NULL,
  GENDER GENDER NOT NULL,
  DATE_OF_BIRTH DATE NOT NULL,
  POSITION JOB NOT NULL,
  EMAIL VARCHAR(30) NOT NULL UNIQUE,
  SALARY INT NOT NULL, 
  USER_ID INT REFERENCES USERS(ID) ON DELETE CASCADE ON UPDATE CASCADE NOT NULL,
  CHECK((NAME != '') AND (Email !='') AND (SALARY > 0) AND (DATE_OF_BIRTH < CURRENT_DATE))
);

CREATE TABLE IF NOT EXISTS DOOR (
  ID INT PRIMARY KEY,
  STATUS BOOLEAN NOT NULL
);

CREATE TABLE IF NOT EXISTS CHILD (
  ID INT PRIMARY KEY,
  NAME VARCHAR(16) NOT NULL,
  GENDER GENDER NOT NULL,
  DATE_OF_BIRTH DATE NOT NULL,
  DOOR_ID INT REFERENCES DOOR(ID) ON DELETE CASCADE ON UPDATE CASCADE NOT NULL,
  CHECK((NAME != '') AND (DATE_OF_BIRTH < CURRENT_DATE))
);

CREATE TABLE IF NOT EXISTS FEAR_ACTION (
  ID INT PRIMARY KEY,
  MONSTER_ID INT REFERENCES MONSTER(ID) ON DELETE NO ACTION ON UPDATE CASCADE  NOT NULL,
  DOOR_ID INT REFERENCES DOOR(ID) ON DELETE NO ACTION ON UPDATE CASCADE  NOT NULL,
  DATE DATE NOT NULL
);

CREATE TABLE IF NOT EXISTS CITY (
  ID SMALLINT PRIMARY KEY,
  NAME VARCHAR(20) NOT NULL UNIQUE CHECK(NAME !='')
);

CREATE TABLE IF NOT EXISTS ELECTRIC_BALLOON (
  ID INT PRIMARY KEY,
  FEAR_ACTION_ID INT REFERENCES FEAR_ACTION(ID),
  CITY_ID SMALLINT REFERENCES CITY(ID) NOT NULL
);

CREATE TABLE IF NOT EXISTS INFECTED_THING (
  ID INT PRIMARY KEY,
  NAME VARCHAR(16) NOT NULL CHECK(NAME !=''),
  DOOR_ID INT REFERENCES DOOR(ID) ON DELETE SET NULL ON UPDATE CASCADE NOT NULL
);

CREATE TABLE IF NOT EXISTS POISONING (
  ID INT PRIMARY KEY,
  MONSTER_ID INT REFERENCES MONSTER(ID) ON DELETE NO ACTION ON UPDATE CASCADE NOT NULL,
  INFECTED_THING_ID INT REFERENCES INFECTED_THING(ID) ON DELETE NO ACTION ON UPDATE CASCADE NOT NULL,
  DATE_OF_POISONING DATE NOT NULL,
  DATE_OF_CURE DATE DEFAULT NULL,
  CHECK(DATE_OF_CURE >= DATE_OF_POISONING)
);
